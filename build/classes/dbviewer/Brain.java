/* Copyright (C) 2014 Mark Ferguson This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. */package dbviewer;import dbviewer.globals.GlobalMethods;import java.awt.Color;import java.awt.GridLayout;import java.awt.event.ActionEvent;import java.awt.event.ActionListener;import javax.swing.JCheckBox;import javax.swing.JComboBox;import javax.swing.JFrame;import javax.swing.JLabel;import javax.swing.JPanel;import panels.Frame4;import panels.Panel4;/** @author maggot.iiss */public class Brain extends JFrame {  //<editor-fold defaultstate="collapsed" desc="Variables">  JPanel p4ai;  JFrame f4ai;  JComboBox jcb4tl;//TL  JComboBox jcb4s;//SIZE  JLabel l4bc;  JCheckBox cb4bc;  JComboBox jcb4t;//TYPE  JComboBox jcb4dx;//DEXTERITY  JComboBox jcb4pow;//POWER  JCheckBox cb4comp;//COMPACT  JCheckBox cb4cap;//CAPACITY  JCheckBox cb4roms;//ROMS  JCheckBox cb4hard;//HARDNESS  JCheckBox cb4data;//DATABANK  String TL;  String SIZE;  String TYPE;  String DEXTERITY;  String POWER;  String COMPACT;  String CAPACITY;  String ROMS;  String HARDNESS;  String BIO;  String DATA;  int tl;  double vol;  double mass;  double cost;  double pow;  int lc;  int compl;  int pts;  double totalvol;  double totalmass;  double totalcost;  double totalpow;  int totallc;  int totalcompl;  int totalpts;  Boolean ERROR = false;  //</editor-fold>  /**   setup GURPS robot brain   */  @SuppressWarnings("unchecked")  public Brain() {    super();    p4ai = new Panel4("Brain");    p4ai.setLayout(new GridLayout(8, 2));    f4ai = new Frame4(p4ai);    f4ai.setBounds(200, 0, 200, 200);    //<editor-fold defaultstate="collapsed" desc="TL">    JLabel jla = new JLabel("TL");    jcb4tl = new JComboBox();    jcb4tl.setToolTipText("TL");    for (int i = 7; i < 14; i++) {      jcb4tl.addItem("" + i);    }    //jcb4tl.addActionListener(al);    //</editor-fold>    //<editor-fold defaultstate="collapsed" desc="SIZE">    //Size    JLabel jlb = new JLabel("SIZE");    jcb4s = new JComboBox();    jcb4s.setToolTipText("SIZE");    jcb4s.addItem("Tiny");    jcb4s.addItem("Small");    jcb4s.addItem("Desktop");    jcb4s.addItem("Microframe");    jcb4s.addItem("Mainframe");    jcb4s.addItem("Macroframe");    //</editor-fold>    //<editor-fold defaultstate="collapsed" desc="TYPE">    //Type - Cyborgs must select Neural-net or Sentient    JLabel jlc = new JLabel("TYPE");    jcb4t = new JComboBox();    jcb4t.setToolTipText("TYPE");    jcb4t.addItem("Normal");    jcb4t.addItem("Neural-net");    jcb4t.addItem("Sentient");    //</editor-fold>    //<editor-fold defaultstate="collapsed" desc="DEXTERITY">    //DEXTERITY    JLabel jld = new JLabel("DEXTERITY");    jcb4dx = new JComboBox();    jcb4dx.setToolTipText("DEXTERITY");    jcb4dx.addItem("DX");    jcb4dx.addItem("DX+1");    jcb4dx.addItem("DX+2");    jcb4dx.addItem("DX+3");    //</editor-fold>    //<editor-fold defaultstate="collapsed" desc="POWER">    //POWER    JLabel jle = new JLabel("POWER");    jcb4pow = new JComboBox<String>();    jcb4pow.setToolTipText("POWER");    jcb4pow.addItem("Standard");    jcb4pow.addItem("Dumb");    jcb4pow.addItem("Genius");    //</editor-fold>    selectCombos();    //<editor-fold defaultstate="collapsed" desc="COMPACT">    //COMPACT    cb4comp = new JCheckBox("COMPACT");    cb4comp.setToolTipText("COMPACTNESS");    //</editor-fold>    //<editor-fold defaultstate="collapsed" desc="ROMS">    //ROMS    cb4roms = new JCheckBox("EXTRA ROM");    cb4roms.setToolTipText("ROMS");    //</editor-fold>    //<editor-fold defaultstate="collapsed" desc="CAPACITY">    //CAPACITY    cb4cap = new JCheckBox("HI CAPACITY");    cb4cap.setToolTipText("CAPACITY");    //</editor-fold>    //<editor-fold defaultstate="collapsed" desc="HARDNESS">    //HARDNESS    cb4hard = new JCheckBox("HARDENED");    cb4hard.setToolTipText("HARDNESS");    //</editor-fold>    //<editor-fold defaultstate="collapsed" desc="BIOLOGY">    //BIOLOGY    cb4bc = new JCheckBox("BioComputer");    cb4bc.setToolTipText("BIOLOGY");    //</editor-fold>    //<editor-fold defaultstate="collapsed" desc="STORAGE">    //STORAGE    cb4data = new JCheckBox("DataBanks");    cb4data.setToolTipText("STORAGE");    //</editor-fold>    //<editor-fold defaultstate="collapsed" desc="addWithListeners">    p4ai.add(jla);    p4ai.add(jcb4tl);    jcb4tl.addActionListener(al);    p4ai.add(jlb);    p4ai.add(jcb4s);    jcb4s.addActionListener(al);    p4ai.add(jlc);    p4ai.add(jcb4t);    jcb4t.addActionListener(al);    p4ai.add(jld);    p4ai.add(jcb4dx);    jcb4dx.addActionListener(al);    p4ai.add(jle);    p4ai.add(jcb4pow);    jcb4pow.addActionListener(al);    p4ai.add(cb4comp);    cb4comp.addActionListener(al);    p4ai.add(cb4roms);    cb4roms.addActionListener(al);    p4ai.add(cb4cap);    cb4cap.addActionListener(al);    p4ai.add(cb4hard);    cb4hard.addActionListener(al);    p4ai.add(cb4bc);    cb4bc.addActionListener(al);    p4ai.add(cb4data);    cb4data.addActionListener(al);    //</editor-fold>    selectChecks();    brainChange();    //System.out.print("" + " = ");    GlobalMethods.autoColor(p4ai, Color.black, Color.lightGray);    GlobalMethods.autoColor(f4ai, Color.black, Color.lightGray);  }  /**   @return Brain definition   */  @Override  public String toString() {    return "Brain[" + "p4ai=" + p4ai + ", f4ai=" + f4ai + ", jcb4tl=" + jcb4tl      + ", jcb4s=" + jcb4s + ", l4bc=" + l4bc + ", cb4bc=" + cb4bc + ", jcb4t="      + jcb4t + ", jcb4dx=" + jcb4dx + ", jcb4pow=" + jcb4pow + ", cb4comp="      + cb4comp + ", cb4cap=" + cb4cap + ", cb4roms=" + cb4roms + ", cb4hard="      + cb4hard + ", cb4data=" + cb4data + ", TL=" + TL + ", SIZE=" + SIZE      + ", TYPE=" + TYPE + ", DEXTERITY=" + DEXTERITY + ", POWER=" + POWER      + ", COMPACT=" + COMPACT + ", CAPACITY=" + CAPACITY + ", ROMS=" + ROMS      + ", HARDNESS=" + HARDNESS + ", BIO=" + BIO + ", DATA=" + DATA + ", tl="      + tl + ", vol=" + vol + ", mass=" + mass + ", cost=" + cost + ", pow="      + pow + ", lc=" + lc + ", compl=" + compl + ", pts=" + pts + ", totalvol="      + totalvol + ", totalmass=" + totalmass + ", totalcost=" + totalcost      + ", totalpow=" + totalpow + ", totallc=" + totallc + ", totalcompl="      + totalcompl + ", totalpts=" + totalpts + ", ERROR=" + ERROR + ", al="      + al + ']';  }  static private ActionListener al = new ActionListener() {    @Override    public void actionPerformed(ActionEvent e) {//      brainChange();//      shower();    }  };  private void selectCombos() {    jcb4tl.setSelectedIndex(3);    jcb4s.setSelectedIndex(2);    jcb4t.setSelectedIndex(2);    jcb4dx.setSelectedIndex(3);    jcb4pow.setSelectedIndex(2);//    jcb4tl.setSelectedIndex(1);//    jcb4s.setSelectedIndex(0);//    jcb4t.setSelectedIndex(0);//    jcb4dx.setSelectedIndex(0);//    jcb4pow.setSelectedIndex(0);  }  private void selectChecks() {    cb4comp.setSelected(true);    cb4cap.setSelected(true);    cb4roms.setSelected(true);    cb4hard.setSelected(true);    cb4bc.setSelected(true);    cb4data.setSelected(true);//    cb4comp.setSelected(false);//    cb4cap.setSelected(false);//    cb4roms.setSelected(false);//    cb4hard.setSelected(false);//    cb4bc.setSelected(false);//    cb4data.setSelected(false);  }  private void brainChange() {    TL = jcb4tl.getSelectedItem().toString();    SIZE = jcb4s.getSelectedItem().toString();    TYPE = jcb4t.getSelectedItem().toString();    if (!"Normal".equals(TYPE)) {      cb4bc.setSelected(true);    }    DEXTERITY = jcb4dx.getSelectedItem().toString();    POWER = jcb4pow.getSelectedItem().toString();    if (cb4comp.isSelected()) {      COMPACT = "Compact Size";    } else {      COMPACT = "Standard Size";    }    if (cb4cap.isSelected()) {      CAPACITY = "High Capacity";    } else {      CAPACITY = "Standard Capacity";    }    if (cb4roms.isSelected()) {      ROMS = "Extra ROMs";    } else {      ROMS = "Normal ROMs";    }    if (cb4hard.isSelected()) {      HARDNESS = "Hardened";    } else {      HARDNESS = "Unhardened";    }    if (cb4bc.isSelected()) {      BIO = "BioComputer";    } else {      BIO = "Computer";    }    if (cb4data.isSelected()) {      DATA = "Extra";    } else {      DATA = "Standard";    }//    showBrain();  }}//  private void showBrain() {//    totalvol = 0.0;//    totalmass = 0;//    totalcost = 0;//    totalpow = 0;//    totallc = 0;//    totalcompl = 0;//    totalpts = 0;//    //System.out.print("");////    //System.out.print("TL" + TL + " " + SIZE + " " + TYPE + " " + BIO + " Brain");////    //<editor-fold defaultstate="collapsed" desc="SIZE">//    //System.out.print("SIZE = " + SIZE);//    totalvol += vol;//    totalmass += mass;//    totalcost += cost;//    totalpow += pow;//    totallc += lc;//    totalcompl += compl;//    totalpts += pts;////    printInfo("Size");//    //</editor-fold>//    //<editor-fold defaultstate="collapsed" desc="TL">//    //System.out.print("TECH LEVEL = " + TL);//    totalvol *= vol;//    totalmass *= mass;//    totalcost *= cost;//    totalpow *= pow;//    totallc += lc;//    totalcompl += compl;//    totalpts += pts;//    printInfo("TL");//    //</editor-fold>//    //<editor-fold defaultstate="collapsed" desc="TYPE">//    //System.out.print("TYPE = " + TYPE);//    totalvol *= vol;//    totalmass *= mass;//    totalcost *= cost;//    totalpow *= pow;//    totallc += lc;//    totalcompl += compl;//    totalpts += pts;//    printInfo("Type");//    //</editor-fold>//    //<editor-fold defaultstate="collapsed" desc="BIO">//    //System.out.print("BIO = " + BIO);//    totalvol *= vol;//    totalmass *= mass;//    totalcost *= cost;//    totalpow += pow;//    totallc += lc;//    totalcompl += compl;//    totalpts += pts;//    printInfo("Bio");//    //</editor-fold>//    //<editor-fold defaultstate="collapsed" desc="DEXTERITY">//    //System.out.print("DEXTERITY = " + DEXTERITY);//    totalvol += 0;//    totalmass += 0;//    totalcost += 0;//    totalpow += 0;//    totallc += -1;//    totalcompl += 1;//    totalpts += -5;//    printInfo("Dexterity");//    //</editor-fold>//    //<editor-fold defaultstate="collapsed" desc="POWER">//    //System.out.print("POWER = " + POWER);//    switch (POWER) {//      case "Normal": {//        totalvol += 0;//        totalmass += 0;//        totalcost += 0;//        totalpow += 0;//        totallc += 0;//        totalcompl += 0;//        totalpts += 0;//        break;//      }//      case "Dumb": {//        totalvol += 0;//        totalmass += 0;//        totalcost *= 0.2;//        totalpow += 0;//        totallc += 0;//        totalcompl += -1;//        totalpts += 0;//        break;//      }////      case "Genius": {//        totalvol *= 1;//        totalmass *= 1;//        totalcost *= 7;//        totalpow += 0;//        totallc += -1;//        totalcompl += 1;//        totalpts += 0;//      }//      break;//    }//    printInfo("Power");//    //</editor-fold>//    //<editor-fold defaultstate="collapsed" desc="COMPACT">//    //System.out.print("COMPACT = " + COMPACT);//    totalvol *= 0.5;//    totalmass *= 0.5;//    totalcost *= 2;//    totalpow += 0;//    totallc += 0;//    totalcompl += 0;//    totalpts += 0;//    printInfo("Compact");//    //</editor-fold>//    //<editor-fold defaultstate="collapsed" desc="CAPACITY">//    //System.out.print("CAPACITY = " + CAPACITY);//    totalvol *= 1;//    totalmass *= 1;//    totalcost *= 1;//    totalpow += 0;//    totallc += 0;//    totalcompl += 0;//    totalpts += 0;//    printInfo("Capacity");//    //</editor-fold>//    //<editor-fold defaultstate="collapsed" desc="ROMS">//    //System.out.print("ROMS = " + ROMS);//    totalvol *= 1;//    totalmass *= 1;//    totalcost *= 1.5;//    totalpow += 0;//    totallc += 0;//    totalcompl += 0;//    totalpts += 0;//    printInfo("ROMs");//    //</editor-fold>//    //<editor-fold defaultstate="collapsed" desc="HARDNESS">//    //System.out.print("HARDNESS = " + HARDNESS);//    totalvol *= 3;//    totalmass *= 3;//    totalcost *= 5;//    totalpow += 0;//    totallc += 0;//    totalcompl += 0;//    totalpts += 0;//    printInfo("Hardness");//    //</editor-fold>//    //<editor-fold defaultstate="collapsed" desc="DATA">//    //    //System.out.print("\tDATA = " + DATA);//    //    totalvol += 0;//    //    totalmass += 0;//    //    totalcost += 0;//    //    totalpow += 0;//    //    totallc += 0;//    //    totalcompl += 0;//    //    totalpts += 0;//    //    printInfo("Data");//    //</editor-fold>//    //System.out.print("");//    printTotals();//  }////  private void printInfo(String name) {//    //<editor-fold defaultstate="collapsed" desc="DEBUG">//    boolean DEBUG = false;//    if (DEBUG) { // true or false//      //System.out.print("\t" + Thread.currentThread().getStackTrace()[1].getMethodName());//      ////System.out.print("" + " = " + );//    }//    //</editor-fold>//    //System.out.print("name" + " = " + name);//    switch (name) {//      //<editor-fold defaultstate="collapsed" desc="SIZE">//      case "Size": {//        ////System.out.print("SIZE = " + SIZE);//        switch (SIZE) {//          case "Tiny": {//            tl = 8;//            mass = 0.5;//            vol = 0.01;//            cost = 200;//            pow = 0;//            lc = 6;//            compl = (Integer.parseInt(TL) - 7);//            pts = 0;//            break;//          }//          case "Small": {//            tl = 7;//            mass = 2;//            vol = 0.04;//            cost = 1000;//            pow = 0;//            lc = 6;//            compl = (Integer.parseInt(TL) - 6);//            pts = 0;//            break;//          }//          case "Desktop": {//            tl = 7;//            mass = 40;//            vol = 0.8;//            cost = 15000;//            pow = 0;//            lc = 6;//            compl = (Integer.parseInt(TL) - 5);//            pts = 0;//            break;//          }//          case "Microframe": {//            tl = 7;//            mass = 200;//            vol = 4;//            cost = 40000;//            pow = 0.1;//            lc = 5;//            compl = (Integer.parseInt(TL) - 4);//            pts = 0;//            break;//          }//          case "Mainframe": {//            tl = 7;//            mass = 500;//            vol = 10;//            cost = 200000;//            pow = 1;//            lc = 5;//            compl = (Integer.parseInt(TL) - 3);//            pts = 0;//            break;//          }//          case "Macroframe": {//            tl = 7;//            mass = 4000;//            vol = 80;//            cost = 2000000;//            pow = 10;//            lc = 5;//            compl = (Integer.parseInt(TL) - 2);//            pts = 0;//            break;//          }//        }//        show(SIZE);//        System.out.print("\tMin TL = " + tl);//        System.out.print("\tVOL = " + vol);//        System.out.print("\tMASS = " + mass);//        System.out.print("\tCOST = " + cost);//        System.out.print("\tPOW = " + pow);//        System.out.print("\tLC = " + lc);//        System.out.print("\tCOMPL = " + compl);//        System.out.print("\tPTS = " + pts);//        System.out.print("\tTL = " + TL);//        //System.out.print("");//        break;//      }//      //</editor-fold>//      //<editor-fold defaultstate="collapsed" desc="TL">//      case "TL": {//        ////System.out.print("TL = " + TL);//        switch (TL) {//          case "7"://          case "8": {//            tl = Integer.parseInt(TL);//            mass = 1;//            vol = 1;//            cost = 1;//            pow = 0;//            lc = 0;//            compl = 0;//            pts = 0;//            break;//          }//          case "9": {//            tl = Integer.parseInt(TL);//            mass = 0.5;//            vol = 0.5;//            cost = 0.5;//            pow = 0;//            lc = 0;//            compl = 0;//            pts = 0;//            break;//          }//          case "10"://          case "11"://          case "12": {//            tl = Integer.parseInt(TL);//            mass = totalmass * 0.25;//            vol = 0.25;//            cost = 0.25;//            pow = 0;//            lc = 0;//            compl = 0;//            pts = 0;//            break;//          }//          case "13": {//            tl = Integer.parseInt(TL);//            mass = 0.125;//            vol = 0.125;//            cost = 0.125;//            pow = 0;//            lc = 0;//            compl = 0;//            pts = 0;//            break;//          }//        }//        show(TL);//        System.out.print("\tMin TL = " + tl);//        System.out.print("\tVOL = " + vol);//        System.out.print("\tMASS = " + mass);//        System.out.print("\tCOST = " + cost);//        System.out.print("\tPOW = " + pow);//        System.out.print("\tLC = " + lc);//        System.out.print("\tCOMPL = " + compl);//        System.out.print("\tPTS = " + pts);//        System.out.print("\tTL = " + TL);//        //System.out.print("");//        //System.out.print("");//        break;//      }////      //</editor-fold>//      //<editor-fold defaultstate="collapsed" desc="TYPE">//      case "Type": {//        ////System.out.print("TYPE = " + TYPE);//        switch (TYPE) {//          case "BioComputer": {//            tl = 8;//            mass = 1.5;//            vol = 1.5;//            cost = 5;//            pow = 0;//            lc = -1;//            compl = +1;//            pts = -5;//            break;//          }//          case "Neural-Net": {//            tl = 8;//            mass = 1;//            vol = 1;//            cost = 2;//            pow = 0;//            lc = 0;//            compl = 0;//            pts = 70;//            break;//          }//          case "Sentient": {//            tl = 10;//            mass = 1;//            vol = 1;//            cost = 3;//            pow = 0;//            lc = -1;//            compl = 0;//            pts = 100;//            break;//          }//        }//        show(TYPE);//        System.out.print("Min TL = " + tl);//        System.out.print("\tVOL = " + vol);//        System.out.print("\tMASS = " + mass);//        System.out.print("\tCOST = " + cost);//        System.out.print("\tPOW = " + pow);//        System.out.print("\tLC = " + lc);//        System.out.print("\tCOMPL = " + compl);//        System.out.print("\tPTS = " + pts);//        System.out.print("\tTL = " + TL);//        //System.out.print("");//        break;//      }//      //</editor-fold>//      //<editor-fold defaultstate="collapsed" desc="DEXTERITY">//      case "Dexterity": {//        ////System.out.print("DEXTERITY = " + DEXTERITY);//        switch (DEXTERITY) {//          case "DX": {//            tl = 7;//            mass = 1;//            vol = 1;//            cost = 1;//            pow = 0;//            lc = 0;//            compl = 0;//            pts = 0;//            break;//          }//          case "DX+1": {//            tl = 7;//            mass = 1;//            vol = 1;//            cost = 1.5;//            pow = 0;//            lc = 0;//            compl = 0;//            pts = 0;//            break;//          }//          case "DX+2": {//            tl = 8;//            mass = 1;//            vol = 1;//            cost = 2;//            pow = 0;//            lc = 0;//            compl = 0;//            pts = 0;//            break;//          }//          case "DX+3": {//            tl = 9;//            mass = 1;//            vol = 1;//            cost = 3;//            pow = 0;//            lc = 0;//            compl = 0;//            pts = 0;//            break;//          }//        }//        show(DEXTERITY);//        System.out.print("Min TL = " + tl);//        System.out.print("\tVOL = " + vol);//        System.out.print("\tMASS = " + mass);//        System.out.print("\tCOST = " + cost);//        System.out.print("\tPOW = " + pow);//        System.out.print("\tLC = " + lc);//        System.out.print("\tCOMPL = " + compl);//        System.out.print("\tPTS = " + pts);//        System.out.print("\tTL = " + TL);//        //System.out.print("");//        break;//      }//      //</editor-fold>//      //<editor-fold defaultstate="collapsed" desc="POWER">//      case "Power": {//        ////System.out.print("POWER = " + POWER);//        switch (POWER) {//          case "Normal"://            tl = 7;//            mass = 1;//            vol = 1;//            cost = 1;//            pow = 0;//            lc = 0;//            compl = 0;//            pts = 0;//            break;//          case "Genius"://            tl = 7;//            mass = 1;//            vol = 1;//            cost = 7;//            pow = 0;//            lc = -1;//            compl = +1;//            pts = 0;//            break;//          case "Dumb"://            tl = 7;//            mass = 1;//            vol = 1;//            cost = 0.2;//            pow = 0;//            lc = 0;//            compl = -1;//            pts = 0;//            break;//        }//      }//      show(POWER);//      System.out.print("\tMin TL = " + tl);//      System.out.print("\tVOL = " + vol);//      System.out.print("\tMASS = " + mass);//      System.out.print("\tCOST = " + cost);//      System.out.print("\tPOW = " + pow);//      System.out.print("\tLC = " + lc);//      System.out.print("\tCOMPL = " + compl);//      System.out.print("\tPTS = " + pts);//      System.out.print("\tTL = " + TL);//      //System.out.print("");//      break;//      //</editor-fold>//      //<editor-fold defaultstate="collapsed" desc="COMPACT">//      case "Compact": {//        ////System.out.print("COMPACT = " + COMPACT);//        switch (COMPACT) {//          case "Compact": {//            tl = 7;//            mass = 0.5;//            vol = 0.5;//            cost = 2;//            pow = 0;//            lc = 0;//            compl = 0;//            pts = 0;//            break;//          }//          case "Standard": {//            tl = 7;//            mass = 1;//            vol = 1;//            cost = 1;//            pow = 0;//            lc = 0;//            compl = 0;//            pts = 0;//            break;//          }//        }//        show(COMPACT);//        System.out.print("\tMin TL = " + tl);//        System.out.print("\tVOL = " + vol);//        System.out.print("\tMASS = " + mass);//        System.out.print("\tCOST = " + cost);//        System.out.print("\tPOW = " + pow);//        System.out.print("\tLC = " + lc);//        System.out.print("\tCOMPL = " + compl);//        System.out.print("\tPTS = " + pts);//        System.out.print("\tTL = " + TL);//        //System.out.print("");//        break;//      }//      //</editor-fold>//      //<editor-fold defaultstate="collapsed" desc="CAPACITY">//      case "Capacity": {//        ////System.out.print("CAPACITY = " + CAPACITY);//        switch ("CAPACITY") {//          case "Standard": {//            tl = 7;//            mass = 1;//            vol = 1;//            cost = 1;//            pow = 0;//            lc = 0;//            compl = 0;//            pts = 0;//            break;//          }//          case "High Capacity": {//            tl = 7;//            mass = 1;//            vol = 1;//            cost = 1.5;//            pow = 0;//            lc = 0;//            compl = 0;//            pts = 0;//            break;//          }//        }//        show(CAPACITY);//        System.out.print("\tMin TL = " + tl);//        System.out.print("\tVOL = " + vol);//        System.out.print("\tMASS = " + mass);//        System.out.print("\tCOST = " + cost);//        System.out.print("\tPOW = " + pow);//        System.out.print("\tLC = " + lc);//        System.out.print("\tCOMPL = " + compl);//        System.out.print("\tPTS = " + pts);//        System.out.print("\tTL = " + TL);//        //System.out.print("");//        break;//      }//      //</editor-fold>//      //<editor-fold defaultstate="collapsed" desc="ROMS">//      case "ROMs": {//        ////System.out.print("ROMS = " + ROMS);//        switch (ROMS) {//          case "Extra ROM": {//            tl = 7;//            mass = 1;//            vol = 1;//            cost = 1.5;//            pow = 0;//            lc = 0;//            compl = 0;//            pts = 0;//            break;//          }//          case "Standard": {//            tl = 7;//            mass = 1;//            vol = 1;//            cost = 1;//            pow = 0;//            lc = 0;//            compl = 0;//            pts = 0;//            break;//          }//        }//        show(ROMS);//        System.out.print("\tMin TL = " + tl);//        System.out.print("\tVOL = " + vol);//        System.out.print("\tMASS = " + mass);//        System.out.print("\tCOST = " + cost);//        System.out.print("\tPOW = " + pow);//        System.out.print("\tLC = " + lc);//        System.out.print("\tCOMPL = " + compl);//        System.out.print("\tPTS = " + pts);//        System.out.print("\tTL = " + TL);//        //System.out.print("");//        break;//      }//      //</editor-fold>//      //<editor-fold defaultstate="collapsed" desc="HARDNESS">//      case "Hardness": {//        ////System.out.print("HARDNESS = " + HARDNESS);//        switch (HARDNESS) {//          case "Hardened": {//            tl = 7;//            mass = 3;//            vol = 3;//            cost = 5;//            pow = 0;//            lc = 0;//            compl = 0;//            pts = 0;//            break;//          }//          case "Standard": {//            tl = 7;//            mass = 1;//            vol = 1;//            cost = 1;//            pow = 0;//            lc = 0;//            compl = 0;//            pts = 0;//            break;//          }//        }//        show(HARDNESS);//        System.out.print("\tMin TL = " + tl);//        System.out.print("\tVOL = " + vol);//        System.out.print("\tMASS = " + mass);//        System.out.print("\tCOST = " + cost);//        System.out.print("\tPOW = " + pow);//        System.out.print("\tLC = " + lc);//        System.out.print("\tCOMPL = " + compl);//        System.out.print("\tPTS = " + pts);//        System.out.print("\tTL = " + TL);//        //System.out.print("");//        break;//      }//      //</editor-fold>//      //<editor-fold defaultstate="collapsed" desc="BIOLOGY">//      case "Bio": {//        ////System.out.print("BIO = " + BIO);//        switch (BIO) {//          case "Computer": {//            tl = 7;//            mass = 1;//            vol = 1;//            cost = 1;//            pow = 0;//            lc = 0;//            compl = 0;//            pts = 0;//            break;//          }//          case "Neural-Net": {//            tl = 8;//            mass = 1;//            vol = 1;//            cost = 2;//            pow = 0;//            lc = 0;//            compl = 0;//            pts = 70;//            break;//          }//          case "Sentient": {//            tl = 7;//            mass = 1;//            vol = 1;//            cost = 3;//            pow = 0;//            lc = -1;//            compl = 0;//            pts = 100;//            break;//          }//        }//        show(BIO);//        System.out.print("\tMin TL = " + tl);//        System.out.print("\tVOL = " + vol);//        System.out.print("\tMASS = " + mass);//        System.out.print("\tCOST = " + cost);//        System.out.print("\tPOW = " + pow);//        System.out.print("\tLC = " + lc);//        System.out.print("\tCOMPL = " + compl);//        System.out.print("\tPTS = " + pts);//        System.out.print("\tTL = " + TL);//        //System.out.print("");//        break;//      }//      //</editor-fold>//      //<editor-fold defaultstate="collapsed" desc="DATA">//      case "Data": {//        ////System.out.print("DATA = " + DATA);//        switch (DATA) {//          case "Extra DataBank": {//            tl = 7;//            mass = 1;//            vol = 1;//            cost = 1;//            pow = 0;//            lc = 0;//            compl = 0;//            pts = 0;//            break;//          }//          case "Normal DataBank": {//            tl = 7;//            mass = 1;//            vol = 1;//            cost = 1;//            pow = 0;//            lc = 0;//            compl = 0;//            pts = 0;//            break;//          }//        }//        show(DATA);//        System.out.print("\tMin TL = " + tl);//        System.out.print("\tVOL = " + vol);//        System.out.print("\tMASS = " + mass);//        System.out.print("\tCOST = " + cost);//        System.out.print("\tPOW = " + pow);//        System.out.print("\tLC = " + lc);//        System.out.print("\tCOMPL = " + compl);//        System.out.print("\tPTS = " + pts);//        System.out.print("\tTL = " + TL);//        //System.out.print("");//        break;//      }//      //</editor-fold>//    }////    checkOK();//  }////  private void checkOK() {//    if (Integer.parseInt(TL) < tl) {//      //System.out.print("XXXXXXX ERROR XXXXXXX");//      ERROR = true;//    }//  }////  private void printTotals() {//    //System.out.print("totalvol = " + (totalvol + vol));//    //System.out.print("totalmass = " + (totalmass + mass));//    //System.out.print("totalcost = " + (totalcost + cost));//    //System.out.print("totalpow = " + (totalpow + pow));//    //System.out.print("totallc = " + (totallc));//    //System.out.print("totalcompl = " + (totalcompl));//    //System.out.print("totalpts = " + (totalpts));//  }////  private void show(Object object) {//    //System.out.print("object = " + object);//    printTotals();//  }////  private void show(Object object, boolean quick) {//    if (!quick) {//      show(object);//    } else {//      //System.out.print(object);//    }//    ////System.out.print("" + " = " + this.toString());////  }////  private void shower() {//    //System.out.print("");//    show(SIZE, true);//    show(TL, true);//    show(TYPE, true);//    show(DEXTERITY, true);//    show(POWER, true);//    show(COMPACT, true);//    show(CAPACITY, true);//    show(ROMS, true);//    show(HARDNESS, true);//    show(BIO, true);//    show(DATA, true);////    ////System.out.print("" + " = " + this.toString());////  }////}