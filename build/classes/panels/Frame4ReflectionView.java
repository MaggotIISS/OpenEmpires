/* Copyright (C) 2014 Mark Ferguson This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. */package panels;import dbviewer.FilteredListing;import dbviewer.TestReflection;import java.io.Serializable;import javax.swing.JFrame;/** <p> @author maggot.iiss */public class Frame4ReflectionView extends JFrame implements Serializable {  private static final long serialVersionUID = 1L;  /**   <p>   @param args strings to start   */  public static void main(String[] args) {    new Frame4ReflectionView();//      JPanel jp = new Frame4ReflectionView();//      JFrame jf = new Frame4(jp);  }  /**   Frame4ReflectionView   */  public Frame4ReflectionView() {    super();    //List of java files in directories    String start = "C:/T5/TFX/src/";    String dirs[] = {start + "dbviewer/", start + "dbviewer/globals/", start      + "dbviewer/trans/", start + "dbviewer/trees/", start + "panels/", start      + "panels/tables/", start + "starters/"    };//    //dir[0] = start + "dbviewer/";//    String[] args1 = FilteredListing.getFilteredListing(dir[0], ".java");//    //dir[1] = start + "forms/";//    String[] args2 = FilteredListing.getFilteredListing(dir[1], ".java");//    //dir[2] = start + "globals/";//    String[] args3 = FilteredListing.getFilteredListing(dir[2], ".java");//    //dir[3] = start + "panels/";//    String[] args4 = FilteredListing.getFilteredListing(dir[3], ".java");//    //dir[4] = start + "tables/";//    String[] args5 = FilteredListing.getFilteredListing(dir[4], ".java");    //dir[0] = start + "dbviewer/";    String[] args1 = FilteredListing.getFilteredListing(dirs[0], ".java");    //dir[1] = start + "dbviewer/globals/";    String[] args2 = FilteredListing.getFilteredListing(dirs[1], ".java");    //dir[2] = start + "dbviewer/trans/";    String[] args3 = FilteredListing.getFilteredListing(dirs[2], ".java");    //dir[3] = start + "dbviewer/trees/";    String[] args4 = FilteredListing.getFilteredListing(dirs[3], ".java");    //dir[4] = start + "panels/";    String[] args5 = FilteredListing.getFilteredListing(dirs[4], ".java");    //dir[4] = start + "panels/tables/";    String[] args6 = FilteredListing.getFilteredListing(dirs[5], ".java");    //dir[4] = start + "starters/";    String[] args7 = FilteredListing.getFilteredListing(dirs[6], ".java");    String a;    String b;    String[][] args = {args1, args2, args3, args4, args5, args6, args7};    for (int i = 0; i < args.length; i++) {      for (int j = 0; j < args[i].length; j++) {        a = (dirs[i] + args[i][j]).toLowerCase();        b = ((dirs[i].substring(start.length()) + args[i][j]).replaceAll("/",          "."));        b = b.substring(0, b.length() - 5);        //System.out.print(b);        ////System.out.print("\t"+a);        TestReflection.main(new String[]{b});      }    }    TestReflection.getSow().setTitle("Reflection");    //GlobalMethods.autoColor(TestReflection.getSow(), Color.black, Color.LIGHT_GRAY);  }  /**   <p>   @param title NOT USED   */  public Frame4ReflectionView(String title) {    this();    //this.setTitle(title);  }  /**   <p>   @return name of class   */  @Override  public String toString() {    return "" + getClass().getName() + "[]";  }}