/* Copyright (C) 2014 Mark Ferguson This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. */package dbviewer;import javax.swing.DefaultListModel;import javax.swing.JFrame;import javax.swing.JList;import javax.swing.JPanel;import javax.swing.event.ListSelectionEvent;import javax.swing.event.ListSelectionListener;import panels.Frame4;import panels.Panel4;/** <p> @author maggot */public class Rules {  static DefaultListModel dlm;  static JPanel p4rules;  static JList jl;  static JFrame f4rules;  /**   <p>   @return Rules currently selected   */  public static String getRules() {    return jl.getSelectedValue().toString();  }  /**   @param args the command line arguments   */  @SuppressWarnings("unchecked")  public static void main(String[] args) {    dlm = new DefaultListModel();    dlm.addElement("CT");    dlm.addElement("MT");    dlm.addElement("TNE");    dlm.addElement("T4");    dlm.addElement("T5");    dlm.addElement("GT");    dlm.addElement("MGP");    p4rules = new Panel4("Rules");    jl = new JList<>(dlm);    jl.setSelectedIndex(0);    p4rules.add(jl);    f4rules = new Frame4(p4rules);    f4rules.setSize(100, 200);    jl.addListSelectionListener(new ListSelectionAdapter());  }  private static class ListSelectionAdapter implements ListSelectionListener {    public ListSelectionAdapter() {    }    @Override    public void valueChanged(ListSelectionEvent lse) {      if (lse.getValueIsAdjusting() != true) {        //System.out.print("" + jl.getSelectedValue().toString());      }    }  }  /**   <p>   @return name of class   */  @Override  public String toString() {    return "" + getClass().getName() + "[]";  }}