/* Copyright (C) 2014 Mark Ferguson This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. */package open;import java.awt.Dimension;import java.awt.Image;import java.beans.PropertyChangeEvent;import java.beans.PropertyChangeListener;import java.io.File;import javax.swing.BorderFactory;import javax.swing.ImageIcon;import javax.swing.JFileChooser;import javax.swing.JLabel;/** <p> @author maggot.iiss */public class ImagePreviewer extends JLabel {  /**   A file chooser accessory that previews images.   */  /**   Constructs an ImagePreviewer.   <p>   @param chooser the file chooser whose property changes trigger an image                  change in this previewer   */  public ImagePreviewer(JFileChooser chooser) {//    Debug.debug("\t" + Thread.currentThread().getStackTrace()[1].getMethodName());    setPreferredSize(new Dimension(132, 112));    setBorder(BorderFactory.createEtchedBorder());    chooser.addPropertyChangeListener(new PropertyChangeListener() {      @Override      public void propertyChange(PropertyChangeEvent event) {        if (event.getPropertyName().equals(          JFileChooser.SELECTED_FILE_CHANGED_PROPERTY)) {          // the user has selected a new file          try {            File f = (File) event.getNewValue();            if (f == null) {              setIcon(null);              return;            }            ImageIcon icon = new ImageIcon(f.getPath());            icon = new ImageIcon(icon.getImage().getScaledInstance(getWidth(),              -1, Image.SCALE_DEFAULT));            setIcon(icon);          } catch (Exception e) {//            System.out.println("" + " = " + e.toString());          }          ////System.out.print("File" + " = " + f.getPath());        }      }    });  }  /**   @return name of class   */  @Override  public String toString() {    return "" + getClass().getName() + "[]";  }  /**   <p>   @return name of selected file   */  public String getFileName() {    return "";  }}