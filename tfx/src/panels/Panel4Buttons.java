/*

 Copyright (C) 2014 Mark Ferguson



 This program is free software: you can redistribute it and/or modify

 it under the terms of the GNU General Public License as published by

 the Free Software Foundation, either version 3 of the License, or

 (at your option) any later version.



 This program is distributed in the hope that it will be useful,

 but WITHOUT ANY WARRANTY; without even the implied warranty of

 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the

 GNU General Public License for more details.



 You should have received a copy of the GNU General Public License

 along with this program.  If not, see <http://www.gnu.org/licenses/>.

 */
package panels;

import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JPanel;

/**
 <p>
 @author Mark Ferguson maggot.iiss@sky.com
 */
public class Panel4Buttons extends Panel4 {

  /**
   JButton[]
   */
  public JButton[] jbs;
  private static final long serialVersionUID = 1L;
  private static JPanel jp;

  /**
   @param args strings to start
   */
  public static void main(String[] args) {
    jp = new Panel4Buttons(4);
    JFrame jf = new Frame4(jp, "Panel4Buttons");
  }

  /**
   Creates new form Panel4Buttons
   */
  public Panel4Buttons() {
    super();
    jbs = new JButton[1];
    setLayout(new GridLayout(1, 1));
    for (int j = 0; j < 1; j++) {
      jbs[j] = new JButton();
      jbs[j].setText("Text " + j);
      jbs[j].setToolTipText("ToolTipText " + j);
      jbs[j].setName("Name " + j);
      jbs[j].setVisible(true);
      jbs[j].addActionListener(new ActionListener() {
        @Override
        public void actionPerformed(ActionEvent e) {
          System.out.println("e.getActionCommand()" + " = " + e
            .getActionCommand());
        }
      });
      add(jbs[j]);
    }
  }

  /**
   <p>
   @param i button to select
   */
  public Panel4Buttons(int i) {
    this();
    jbs = new JButton[i];
    setLayout(new GridLayout(i / 2, 2));
    for (int j = 1; j < i; j++) {
      jbs[j] = new JButton();
      jbs[j].setText("Text " + j);
      jbs[j].setToolTipText("ToolTipText " + j);
      jbs[j].setName("Name " + j);
      jbs[j].setVisible(true);
      jbs[j].addActionListener(new ActionListener() {
        @Override
        public void actionPerformed(ActionEvent e) {
          System.out.println("e.getActionCommand()" + " = " + e
            .getActionCommand());
        }
      });
      add(jbs[j]);
    }
  }

  /**
   <p>
   @return name of class
   */
  @Override
  public String toString() {
    return "" + getClass().getName() + "[]";
  }

  /**
   This method is called from within the constructor to initialize the form.
   WARNING: Do NOT modify this code. The content of this method is always
   regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
    this.setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGap(0, 400, Short.MAX_VALUE)
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGap(0, 300, Short.MAX_VALUE)
    );
  }// </editor-fold>//GEN-END:initComponents

  // Variables declaration - do not modify//GEN-BEGIN:variables
  // End of variables declaration//GEN-END:variables
}
