/* Copyright (C) 2014 Mark Ferguson This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. */package panels;import dbviewer.AnyMenu;import dbviewer.DBViewer;import dbviewer.globals.GlobalMethods;import java.awt.BorderLayout;import java.awt.Color;import java.awt.event.ComponentAdapter;import java.awt.event.ComponentEvent;import java.io.BufferedReader;import java.io.FileReader;import java.io.IOException;import java.io.Serializable;import javax.swing.JFrame;import javax.swing.JMenu;import javax.swing.JMenuBar;import javax.swing.JMenuItem;import javax.swing.JScrollPane;/** <p> @author maggot.iiss */public class Frame4DBView extends JFrame implements Serializable {  //<editor-fold defaultstate="collapsed" desc="Variables">  private static final long serialVersionUID = 1L;  /**   JFrame text in title bar   */  private String title = "title";  /**   variable for holding strings   */  private String[] names = {"a", "b", "c"};  private Boolean[] enabled = null;  private JFrame jf1;  private JMenuBar jmb;  private JMenu jmfile;  private JMenuItem jmisave;  private Panel4LabelComboButton p4lcb;  private Panel4DBButtons p4dbb;  private Panel4Title p4i;  private JScrollPane jsp;  private AnyMenu am;  //</editor-fold>  /**   Frame4DBView   */  public Frame4DBView() {    super();    //<editor-fold defaultstate="collapsed" desc="DEBUG">    boolean DEBUG = false;    if (DEBUG) { // true or false      //System.out.print("---------------------------");      //System.out.print("\t" + Thread.currentThread().getStackTrace()[1].getMethodName());    }//</editor-fold>    jf1 = new JFrame();    title = DBViewer.jList1.getSelectedValue().toString();    super.setTitle(DBViewer.getTitle());    jf1.setTitle(DBViewer.getTitle());    names = loadFromFile(jf1.getTitle());    //names = GlobalMethods.getStringsFromFile(new File(jf1.getTitle()));    jf1.setDefaultCloseOperation(JFrame.HIDE_ON_CLOSE);    jf1.setBounds(200, 0, 420, 500);    jf1.addComponentListener(new ComponentAdapter() {      @Override      public void componentResized(ComponentEvent e) {        //<editor-fold defaultstate="collapsed" desc="DEBUG">        boolean DEBUG = false;        if (DEBUG) { // true or false          //System.out.print("---------------------------");          //System.out.print("\t" + Thread.currentThread().getStackTrace()[1].getMethodName());        }//</editor-fold>//        getJf1().setTitle(jList1.getSelectedValue().toString());// + " " + resetTitle());      }//      private String resetTitle() {////        return (" x=" + getJf1().getWidth() + ":y=" + getJf1().getHeight());//        return "";//      }    });    jf1.setLayout(new BorderLayout());    //am = new AnyMenu(jf1);    p4i = new Panel4Title(jf1.getTitle());//    Debug.debug("" + title);//    Debug.debug("" + names);//    Debug.debug("" + enabled);    p4lcb = new Panel4LabelComboButton(420, 500, title, names, enabled);    jsp = new JScrollPane(getP4lcb());    p4dbb = new Panel4DBButtons();    //jf1.setJMenuBar(am.);    jf1.getContentPane().add(p4i, BorderLayout.NORTH);    jf1.getContentPane().add(jsp, BorderLayout.CENTER);    //jf1.getContentPane().add(p4lcb, BorderLayout.SOUTH);    jf1.getContentPane().add(p4dbb, BorderLayout.SOUTH);    jf1.setVisible(true);    GlobalMethods.autoColor(jf1, Color.black, Color.lightGray);    GlobalMethods.autoColor(p4i, Color.black, Color.lightGray);    GlobalMethods.autoColor(jsp, Color.black, Color.lightGray);    GlobalMethods.autoColor(this, Color.black, Color.lightGray);    GlobalMethods.autoColor(p4lcb, Color.black, Color.lightGray);  }  /**   <p>   @param title to setTitle()   */  public Frame4DBView(String title) {    this();    this.setTitle(title);  }  /**   <p>   @param sel SELECTED FILE IN LISTBOX   @return STRING ARRAY OF ENTRIES   */  private String[] loadFromFile(String sel) {    //<editor-fold defaultstate="collapsed" desc="DEBUG">    boolean DEBUG = false;    if (DEBUG) { // true or false      //System.out.print("---------------------------");      //System.out.print("\t" + Thread.currentThread().getStackTrace()[1].getMethodName());    }//</editor-fold>    String[] strings = null;    try {      try (FileReader file = new FileReader(sel);        BufferedReader buffer = new BufferedReader(file)) {        String line = buffer.readLine();        //System.out.print(" = " + line);        strings = line.split(",");        buffer.close();      }    } catch (IOException e) {      //<editor-fold defaultstate="collapsed" desc="DEBUG">      DEBUG = false;      if (DEBUG) { // true or false        //System.out.print("---------------------------");        //System.out.print("\t" + Thread.currentThread().getStackTrace()[1].getMethodName());      }//</editor-fold>      //System.out.print("IOException = " + e.getMessage());    }    if (null == strings) {      //System.out.print("NULL RETURN private String[] loadFromFile()");//" + sel + "    }    if (strings.length > 0) {      for (int i = 0; i < strings.length; i++) {        //System.out.print("" + strings[i]);      }    }    return strings;  }  /**   @return the jsp   */  public JScrollPane getJsp() {    return jsp;  }  /**   @param jsp the jsp to set   */  public void setJsp(JScrollPane jsp) {    this.jsp = jsp;  }  /**   @return the p4lcb   */  public Panel4LabelComboButton getP4lcb() {    return p4lcb;  }  /**   @param p4lcb the p4lcb to set   */  public void setP4lcb(Panel4LabelComboButton p4lcb) {    this.p4lcb = p4lcb;  }  /**   @return the p4dbb   */  public Panel4DBButtons getP4dbb() {    return p4dbb;  }  /**   @param p4dbb the p4dbb to set   */  public void setP4dbb(Panel4DBButtons p4dbb) {    this.p4dbb = p4dbb;  }  /**   @return the p4i   */  public Panel4Title getP4i() {    return p4i;  }  /**   @param p4i the p4i to set   */  public void setP4i(Panel4Title p4i) {    this.p4i = p4i;  }  /**   <p>   @return name of class   */  @Override  public String toString() {    return "" + getClass().getName() + "[]";  }}